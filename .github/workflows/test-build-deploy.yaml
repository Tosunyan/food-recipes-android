name: Deploy development build

on:
  workflow_call:
    inputs:
      environment:
        required: true
        type: string
      deploy:
        required: true
        type: boolean

env:
  ENVIRONMENT: ${{ inputs.environment }}

  KEY_ALIAS: ${{ secrets.KEY_ALIAS }}
  KEY_PASSWORD: ${{ secrets.KEY_PASSWORD }}
  STORE_PASSWORD: ${{ secrets.STORE_PASSWORD }}

  APK_PATH: ${{ vars.APK_PATH }}
  MEAL_API_BASE_URL: ${{ vars.MEAL_API_BASE_URL }}
  MEAL_API_KEY: ${{ secrets.MEAL_API_KEY }}

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest

    steps:
      - name: Run tests
        run: ./gradlew test

  build:
    if: deploy
    name: Build
    runs-on: ubuntu-latest
    environment: $ENVIRONMENT
    needs: test

    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4.4.0
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Validate Gradle wrapper
        uses: gradle/actions/wrapper-validation@v4

      - name: Cache Gradle packages
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Generate local properties
        run: |
          touch local.properties
          touch prod.properties

      - name: Build Debug APK
        run: ./gradlew app:assembleDebug

      - name: Upload APK
        uses: actions/upload-artifact@v4
        with:
          name: app-debug
          path: $APK_PATH

  deploy:
    if: deploy
    name: Deploy
    runs-on: ubuntu/latest
    needs: build
    steps:
      - name: Deploy to Firebase App Distribution
        env:
          FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}
          FIREBASE_APP_ID: ${{ secrets.FIREBASE_APP_ID }}
          COMMIT_MESSAGE: ${{ github.event.head_commit.message }}

        run: |
          npm install -g firebase-tools
          firebase --version
          firebase appdistribution:distribute "$APK_PATH" \
            --app "$FIREBASE_APP_ID" \
            --release-notes "$COMMIT_MESSAGE" \
            --groups "trusted-testers"